# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $super Menu

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
# set $term foot
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu wofi --show=drun --lines=10 --prompt=""

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg /home/koki/Downloads/arch_color_3440x1440.png fill

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

#screen lock (swayidle, swaylock-effects)
exec swayidle -w \
  timeout 600 'swaylock -f -C ~/.config/swaylock/config' \
  timeout 1800 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
  before-sleep 'swaylock -f -C ~/.config/swaylock/config'

bindsym $super+l exec swaylock -f -C ~/.config/swaylock/config

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
input * {
    xkb_layout "jp"
    tap enabled
    natural_scroll enabled
}
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $super+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Alt+r reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed

    #bindsym $mod+e layout toggle split
    bindsym $mod+Shift+a layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+plus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Floating ウィンドウの最大化
bindsym $mod+Shift+f exec ~/.config/sway/maximize_floating_window.sh


#
# Custom Keybined
#
    #Volume
    #bindsym XF86AudioRaiseVolume exec amixer set Master 5%+
    #bindsym XF86AudioLowerVolume exec amixer set Master 5%-
    #bindsym XF86AudioMute exec amixer set Master toggle

    #pipewire (+wob)
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1| awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle

    #Brightness (+wob)
    bindsym XF86MonBrightnessUp exec brightnessctl set 5%+ | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK

    #Audio
    #bindsym XF86AudioPlay exec playerctl play-pause
    #bindsym XF86AudioNext exec playerctl next
    #bindsym XF86AudioPrev exec playerctl previous
    #bindsym XF86Search exec $menu

    #Screenshot
    bindsym $super+s exec grim
    #bindsym $super+Ctrl+s exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')"
    #bindsym $mod+Ctrl+s exec grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused==true).rect | "\(.x),\(.y) \(.width)x\(.height)"')" $(date +'%Y%m%d%H%M%S').png

    #Snipping
    bindsym $super+Shift+s exec grim -g "${slurp}"

    #auto layout(horizontal)
    # Set the default split direction to horizontal
    default_orientation horizontal
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}
bar {
	swaybar_command waybar
}

include /etc/sway/config.d/*

#
# mysetup
#

#language
exec fcitx5

#window gap
set $gaps_inner_default 4
set $gaps_outer_default 1
gaps inner $gaps_inner_default
gaps outer $gaps_outer_default

#window(remove title bar & set opacity)
# for_window [app_id="^.*"] {
#     border pixel 3
#     opacity 1.0
# }

for_window [class="Flet"] {
    focus
#exec {
#        new_workspace=$(swaymsg -t get_workspaces | jq -r '.[] | .num' | sort -rn | head -n 1 | xargs -I {} expr {} + 1)
#        swaymsg move container to workspace $new_workspace
#    }
    move container to workspace back_and_forth
}

for_window [app_id="^.*"] {
    border pixel 3
}

#apps
for_window [app_id="(?i)thunar"] floating enable
for_window [class="obsidian"] opacity 0.7
#for_window [class="Cursor"] opacity 0.7
#for_window [app_id="(?i)LibreWolf"] opacity 1.0


#window theme colors
set $fc #1793d1
set $ufc #333333
set $urg #ffe119
set $bg #333333
set $tex #ffffff

#class      	            border	    background	text	    indicator	child_border
client.background	        $bg	        $bg 	    $tex        $bg	        $bg
client.focused	            $fc 	    $fc 	    $tex	    $bg 	    $fc
client.focused_inactive	    $bg 	    $bg 	    $tex	    $bg 	    $bg
client.unfocused	        $ufc	    $ufc	    $tex	    $bg 	    $ufc
client.urgent	            $urg        $urg 	    $tex 	    $bg 	    $urg
#client.placeholder	        n/a         n/a         n/a         n/a         n/a

#bluetooth
exec blueman-applet

#Clamshell Mode
set $laptop eDP-1
bindswitch --reload --locked lid:on output $laptop disable
bindswitch --reload --locked lid:off output $laptop enable
exec_always ./clamshell.sh

#overlay bar(wob)
set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob
exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK


#desktop notifications
exec mako

#Clipboard(clipman, wl-clipboard)
exec wl-paste -t text --watch clipman store
bindsym $mod+p exec clipman pick -t wofi
bindsym $mod+Shift+p exec clipman clear -t wofi && clipman clear --all
exec clipman restore
